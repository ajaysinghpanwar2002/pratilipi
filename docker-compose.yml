version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./pkg/db/init_db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network

  user_service:
    build:
      context: .
      dockerfile: ./cmd/user_service/Dockerfile
    command: ["./wait-for-it.sh", "postgres:5432", "--", "./wait-for-it.sh", "redis:6379", "--", "./wait-for-it.sh", "rabbitmq:5672", "--", "./user_service"]
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      USER_DB: ${USER_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      RABBITMQ_URL: ${RABBITMQ_URL}
    networks:
      - app-network

  product_service:
    build:
      context: .
      dockerfile: ./cmd/product_service/Dockerfile
    command: ["./wait-for-it.sh", "postgres:5432", "--", "./wait-for-it.sh", "redis:6379", "--", "./wait-for-it.sh", "rabbitmq:5672", "--", "./product_service"]
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PRODUCT_DB: ${PRODUCT_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      RABBITMQ_URL: ${RABBITMQ_URL}
    networks:
      - app-network

  order_service:
    build:
      context: .
      dockerfile: ./cmd/order_service/Dockerfile
    command: ["./wait-for-it.sh", "postgres:5432", "--", "./wait-for-it.sh", "redis:6379", "--", "./wait-for-it.sh", "rabbitmq:5672", "--", "./order_service"]
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ORDER_DB: ${ORDER_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      RABBITMQ_URL: ${RABBITMQ_URL}
    networks:
      - app-network

  graphql_gateway:
    build:
      context: .
      dockerfile: ./cmd/graphql_gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user_service
      - product_service
      - order_service
    environment:
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      PRODUCT_SERVICE_URL: ${PRODUCT_SERVICE_URL}
      ORDER_SERVICE_URL: ${ORDER_SERVICE_URL}
    networks:
      - app-network

volumes:
  postgres-data:
  rabbitmq-data:

networks:
  app-network:
